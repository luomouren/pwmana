<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">
		
	<!-- 加载DB属性文件 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	
    <!-- 数据源c3p0 -->  
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">   
        <property name="driverClass" value="${jdbc.driverClassName}" />  
        <property name="jdbcUrl" value="${jdbc.url}" />  
        <property name="user" value="${jdbc.username}" />  
        <property name="password" value="${jdbc.password}" />  
	<!--连接池中保留的最小连接数。-->  
        <property name="minPoolSize" value="${jdbc.minPoolSize}"></property>  
   
 	<!--连接池中保留的最大连接数。Default: 15 -->  
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"></property>  
   
	<!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->  
        <property name="initialPoolSize" value="${jdbc.initialPoolSize}"></property>  
   
 	<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->  
        <property name="maxIdleTime" value="${jdbc.maxIdleTime}"></property>  
   
 	<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->  
        <property name="acquireIncrement" value="${jdbc.acquireIncrement}"></property>  
   
 	<!--JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements  
	  属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。  
	  如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0-->  
        <property name="maxStatements" value="${jdbc.maxStatements}">  
        </property>  
   
 	<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->  
        <property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}"></property>  
   
 	<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->  
        <property name="acquireRetryAttempts" value="${jdbc.acquireRetryAttempts}"></property>  
   
	 <!--获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效  
	  保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试  
	  获取连接失败后该数据源将申明已断开并永久关闭。Default: false-->  
        <property name="breakAfterAcquireFailure" value="${jdbc.breakAfterAcquireFailure}"></property>   
    </bean>  
	
	
	<!-- 添加mybatis配置文件-->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<!-- mybatis配置文件 -->
		<property name="configLocation"  value="classpath:mybatis/SqlMapConfig.xml"/>
		<!-- mapper.xml所在路径 -->
		<property name="mapperLocations" value="classpath:mybatis/mapper/*.xml"></property>
		<!-- 自动扫描需要定义类别名的包，将包内的JAVA类的类名作为类别名 -->
		<property name="typeAliasesPackage" value="com.zacamy.pwmana.bean"></property>
	</bean>
	
	<!-- 扫描mapper目录 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描路径，如果需要扫描多个包，中间用半角的逗号隔开 -->
		<property name="basePackage" value="com.zacamy.pwmana.mapper"/>
		<property name="sqlSessionFactoryBeanName" value="sessionFactory"/>
	</bean>
	
</beans>